# ---------------------------------------------------------------------------
#  MODEL CONFIGURATION
# ---------------------------------------------------------------------------
MODEL:
  # Fixed parameters (not optimized)
  PARAMS:
    model_name: "UMIModel"

    #  Model Paths
    logs_dir: "logs/models/"      # Where checkpoints / logs are stored       (general)

    # Model architecture & Data Augmentation
    pred_len:   1                 # H : prediction horizon (next bar)         (one-step forecast)
    dynamic_universe_mult: 0.2    # Capacity multiplier when extenting universe: 1+univers_mult (in this case +20%)       
    feature_dim: 5                # OHLCV + extra features for L1 market data. To be changed if higher level data is avail
    features_to_load: "candles"   # candles = OHLCV

    # Training
    target_idx:      3           # target column idx (from 0..N-1) in the CSV (e.g., Close Price)
    n_epochs:        20          # Epochs on train+valid after hp tuning and rolling initialization
    batch_size:      64          # Mini-batch size for AdamW                 
    training_mode: "sequential"  # “sequential”: Stage-1 → Stage-2    /   “hybrid”  : Stage-1 (pretrain_epochs) -> Stage-1 + Stage-2
    pretrain_epochs: 5           # Stage-1 warm-up epochs in hybrid mode
    patience:        3           # Early-stop patience 
    warm_start:      true        # Enable warm-start                           (common in finance live rolls)
    warm_training_epochs: 10     # Light fine-tune epochs
    save_backups: false          # whether to save backups during walk-forward

    # Hyperparameter tuning settings
    tune_hparams:    true        # Use Optuna Bayesian search.            
    n_trials:        4           # Optuna trials for each run. Used only if tune_hparams is true

  # Default hyper-parameters defined by model are overwritten by this Optuna configuration
  HPARAMS:  # optuna_type: "categorical", low-high (assumed float), int_low-high, log_low-high
    
    #  Training window.
    train_offset:
      default: "12BME"           # BME = business months end
      optuna:
        optuna_type: "categorical"
        #choices: ["3BME", "6BME", "12BME"]
        choices: ["1BME", "2BME", "3BME"]

    # L : look-back window length
    window_len:  
      default: 10
      optuna:
        optuna_type: "categorical"
        choices: [1,2,3]
        #choices: [7, 30, 60, 150, 365]

    # λ_IC   : independence loss weight
    lambda_ic:        
      default: 0.5
      optuna:            
        optuna_type: "categorical"
        choices: [0, 0.25, 0.5, 0.75, 1]

    # λ_sync : synchronous factor loss 
    lambda_sync:
      default: 1.0
      optuna:
        optuna_type: "categorical"
        choices: [0, 0.5, 1, 1.5, 2]

    # λ_rank : rank-IC regulariser
    lambda_rankic:     
      default: 0.1
      optuna:
        optuna_type: "categorical"
        choices: [0, 0.05, 0.1, 0.15, 0.2]

    # τ : attention temperature
    temperature:
      default: 0.07
      optuna:
        optuna_type: low-high
        low: 0.03
        high: 0.2
    
    # θ_sync : threshold for stock synchrony
    sync_thr:
      default: 0.6
      optuna:
        optuna_type: low-high
        low: 0.5
        high: 0.8

    # α₁: learning-rate Stage-1 (AdamW)
    lr_stage1:
      default: 0.001
      optuna:
        optuna_type: log_low-high
        low: 0.0001
        high: 0.005

    # α₁^ft  : LR when fine-tuning Stage-1 in hybrid mode
    lr_stage1_ft:
      default: 0.0001
      optuna:
        optuna_type: log_low-high
        low: 0.0001
        high: 0.005

    # α₂: learning-rate Forecasting head
    lr_stage2:
      default: 0.0001
      optuna:
        optuna_type: log_low-high
        low: 0.00001
        high: 0.001

    # stays frozen withouyt specifying the optuna values for hp optimization
    weight_decay: 
      default: 0.0       

# ===============================================================================
#  STRATEGY CONFIGURATION
# ===============================================================================

STRATEGY:
  # Fixed parameters (not optimized)
  PARAMS:
    strategy_name: "LongShortStrategy"

    # Backtest
    # NOTE on timeline:          train_start < train_end = valid_start = strategy_valid_start < valid_end = strategy_valid_end = backtest_start < backtest_end
    freq: 1D                     # 1 business-day bars ( offset ); managed by pandas_market_calendars (1D = 1B)
    train_start:  2019-01-01     # Initial date where the
    backtest_end: 2020-01-01     # End of walk-forward evaluation (2 years). # TODO: Ensure that backtest_end >= train_start + train_offset [+ valid_offset] + pred_len
    calendar: NYSE               # Pandas Market calendar for the Equities market. Ref: https://pandas-market-calendars.readthedocs.io/en/latest/calendars.html#equity-market-calendars 
    initial_cash: 20000          # portfolio initial cash                    (portfolio)
    currency: USD

    # Paths
    data_dir: "data/"            # Root Data folder containing subfolders with CSVs        (general)
    logs_dir: "logs/strategies/"

    # Engine settings
    engine:
      cache:
        bar_capacity: 4096       # ≥ L + pred_len + some safety margin


    # Hyperparameter tuning settings
    tune_hparams: true
    n_trials: 10
    valid_split : 0.2    # meaning 80/20 train/valid split of full training dataset. NOTE: used also for model split

    # Data and training windows
    # holdout: 1B              # holdout period in days. NOTE: ensure pred_len < holdout
    # allocation:
    #   gross_leverage: 2.0    # Σ|wᵢ|  ≤ 2  (1949 Graham “gross leverage”)
    #   net_exposure:   0.0    # Σwᵢ ≈ 0 (market-neutral)

    # Trading friction costs
    costs:
      fee_bps:    0.5          # One-way commission in basis-points of notional    (Tcost literature)
      prob_slippage: 0.2       # Simulates the probability of experiencing price slippage when executing market orders. When triggered, moves fill price one tick against your order direction
      prob_fill_on_limit: 0.2  # Simulates the probability of a limit order getting filled when its price level is reached in the market.New random probability check occurs each time market price touches your order price (but does not move through it)

    # Order execution algorithm
    execution:
      timing_force: "DAY"      #  Specifies how long the order will remain open or active before any remaining quantity is canceled.
      twap:                    # Split parent order into 4 TWAP child orders, each after 2.5 seconds 
        horizon_secs: 10.0
        interval_secs: 2.5

    # Liquidity constraints   
    liquidity:
      adv_lookback: 30     # Look-back window to compute Average Daily Volume (ADV)
      max_adv_pct:  0.05   # Max trade size = 5 % ADV 


  # Hyperparameters to optimize
  HPARAMS:
    # Retrain fine-tuning
    retrain_offset:
      default: "30B"                    # B = business day
      optuna:
        optuna_type: "categorical"
        choices: ["7B", "14B", "30B", "60B"]

    # Portfolio selection
    selection_top_k:
      default: 30
      optuna:
        optuna_type: int_low-high
        low: 10
        high: 50
    
    # Optimizer settings
    optimizer_name:
      default: "max_sharpe"          # maximize sharpe ratio
      optuna:
        optuna_type: categorical
        choices: ["max_sharpe"] # , "min_variance", "equal_weight"
    
    optimizer_lookback_days:
      default: "60B"
      optuna:
        optuna_type: categorical
        choices: ["30B", "60B", "90B", "120B"]
    
    # Risk management overlays
    risk_trailing_stop_pct:           # % trailing stop from HWM/LWM 5%
      default: 0.05
      optuna:
        optuna_type: low-high
        low: 0.02
        high: 0.10
    
    risk_target_vol_annual:           # Volatility target (Hull, risk parity) 15 %
      default: 0.15
      optuna:
        optuna_type: low-high
        low: 0.10
        high: 0.25
    
    risk_drawdown_pct:                # Kill-switch at 15 % peak-to-trough     (Kelly criterion risk control)
      default: 0.15
      optuna:
        optuna_type: low-high
        low: 0.10
        high: 0.25
    
    risk_max_weight_abs:              # Max 3 % NAV per single position        (concentration limit)
      default: 0.03
      optuna:
        optuna_type: low-high
        low: 0.02
        high: 0.05
    
    risk_max_weight_rel:              # Max 20 % of gross exposure in one name
      default: 0.20
      optuna:
        optuna_type: low-high
        low: 0.15
        high: 0.30

    # Allocation constraints
    allocation_gross_leverage:        # Σ|wᵢ|  ≤ 2  (1949 Graham “gross leverage”)
      default: 2.0
      optuna:
        optuna_type: low-high
        low: 1.0
        high: 3.0
    
    allocation_net_exposure:          # Σwᵢ ≈ 0 (market-neutral)
      default: 0.0
      optuna:
        optuna_type: low-high
        low: -0.2
        high: 0.2